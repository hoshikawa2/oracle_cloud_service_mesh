apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    servicemesh.oci.oracle.com/ingress-gateway-deployment: redis-ingress-gateway-deployment
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: redis
    component: cache
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      labels:
        name: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis
        imagePullPolicy: Always
        args: ["--requirepass", "$(REDIS_PASS)"]
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: MASTER
          value: "true"
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: redis
              key: REDIS_PASS
---
kind: Mesh
apiVersion: servicemesh.oci.oracle.com/v1beta1
metadata:
  name: redis
  namespace: default
spec:
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  certificateAuthorities:
    - id: ocid1.certificateauthority.oc1.iad.amaaaaaaihuwreyarlf5kyc3xyzhupk7xxd5yjs4s63b5ui7t5ec4pan3eaa
  mtls:
    minimum: DISABLED
---
kind: VirtualService
apiVersion: servicemesh.oci.oracle.com/v1beta1
metadata:
  name: ms-redis
  namespace: default
spec:
  mesh:
    ref:
      name: redis
 
  defaultRoutingPolicy:
    type: UNIFORM
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
 
  hosts:
    - ms-redis
    - ms-redis:6379
---
kind: VirtualDeployment
apiVersion: servicemesh.oci.oracle.com/v1beta1
metadata:
  name: ms-redis
  namespace: default
spec:
  virtualService:
    ref:
      name: ms-redis
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  listener:
    - port: 6379
      protocol: TCP
  accessLogging:
    isEnabled: true
  serviceDiscovery:
    type: DNS
    hostname: ms-redis
---
apiVersion: servicemesh.oci.oracle.com/v1beta1
kind: VirtualServiceRouteTable
metadata:
  name: ms-redis-route-table
  namespace: default
spec:
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  virtualService:
    ref:
      name: ms-redis
  routeRules:
    - httpRoute:
        destinations:
          - virtualDeployment:
              ref:
                name: ms-redis
            weight: 100
---
kind: IngressGateway
apiVersion: servicemesh.oci.oracle.com/v1beta1
metadata:
  name: redis-ingress-gateway
  namespace: default
spec:
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  mesh:
    ref:
      name: redis
  hosts:
    - name: redis
      hostnames:
        - redis:6379
      listeners:
        - port: 6379
          protocol: TCP
          tls:
            serverCertificate:
              ociTlsCertificate:
                certificateId: ocid1.certificate.oc1.iad.amaaaaaaihuwreya24alauqstwduwycqufhulrsx4zqmjvpssyt45fepcauq
            mode: TLS
  accessLogging:
    isEnabled: true
---
apiVersion: servicemesh.oci.oracle.com/v1beta1
kind: IngressGatewayRouteTable
metadata:
  name: redis-ingress-gateway-route-table
  namespace: default
spec:
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  ingressGateway:
    ref:
      name: redis-ingress-gateway
  routeRules:
    - httpRoute:
        ingressGatewayHost:
          name: redistHost
        destinations:
          - virtualService:
              ref:
                name: ms-redis
---
kind: AccessPolicy
apiVersion: servicemesh.oci.oracle.com/v1beta1
metadata:
  name: redis-policy
  namespace: default
spec:
  mesh:
    ref:
      name: redis
  compartmentId: ocid1.compartment.oc1..aaaaaaaajp2gjl5ki2mhfnybw4foi2b7apv4khhyrkcjior23jsxbr47yvuq
  rules:
    - action: ALLOW
      source:
        virtualService:
          ref:
            name: ms-redis
      destination:
        virtualService:
          ref:
            name: ms-redis
    - action: ALLOW
      source:
        ingressGateway:
          ref:
            name: redis-ingress-gateway
      destination:
        virtualService:
          ref:
            name: ms-redis
---
